{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { observable, action, makeObservable } from \"mobx\";\nimport HttpWrapper from \"../utils/HttpClient\";\nvar LoginStore = (_class = function () {\n  function LoginStore() {\n    _classCallCheck(this, LoginStore);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"email\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"password\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"setLoaderStatus\", _descriptor4, this);\n\n    makeObservable(this);\n  }\n\n  _createClass(LoginStore, [{\n    key: \"login\",\n    value: function login() {\n      var postdata;\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              postdata = {\n                \"email\": this.email,\n                \"password\": this.password\n              };\n              this.setLoaderStatus(true);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(HttpWrapper().postResponse('users/login', postdata).then(function (data) {\n                console.log(data);\n                alert('Login Successful');\n              }).catch(function () {\n                alert('error occurs in login');\n              }));\n\n            case 4:\n              this.setLoaderStatus(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return LoginStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"email\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"password\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"login\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"login\"), _class.prototype), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"setLoaderStatus\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (status) {\n      _this.isLoading = status;\n    };\n  }\n})), _class);\nexport { LoginStore as default };","map":{"version":3,"names":["observable","action","makeObservable","HttpWrapper","LoginStore","postdata","email","password","setLoaderStatus","postResponse","then","data","console","log","alert","catch","status","isLoading"],"sources":["/home/suraj/Desktop/hack/new/ineuron_sport_buddy_app/src/stores/LoginStore.ts"],"sourcesContent":["import { observable, action, makeObservable } from \"mobx\";\nimport HttpWrapper from \"../utils/HttpClient\";\n\nexport default class LoginStore {\n    @observable isLoading: boolean = false;\n    @observable email: string = '';\n    @observable password: string = '';\n\n    constructor() {\n        makeObservable(this);\n    }\n\n    @action async login() {\n        var postdata = {\n            \"email\": this.email,\n            \"password\": this.password\n        }\n        this.setLoaderStatus(true);\n        await HttpWrapper().postResponse('users/login', postdata).then((data) => {\n            console.log(data)\n            alert('Login Successful')\n        }).catch(() => {\n            alert('error occurs in login')\n        })\n        this.setLoaderStatus(false);\n    }\n\n    @action setLoaderStatus = (status: boolean) => {\n        this.isLoading = status\n    }\n\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,cAA7B,QAAmD,MAAnD;AACA,OAAOC,WAAP;IAEqBC,U;EAKjB,sBAAc;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IACVF,cAAc,CAAC,IAAD,CAAd;EACH;;;;WAED;MAAA;MAAA;QAAA;UAAA;YAAA;cACQG,QADR,GACmB;gBACX,SAAS,KAAKC,KADH;gBAEX,YAAY,KAAKC;cAFN,CADnB;cAKI,KAAKC,eAAL,CAAqB,IAArB;cALJ;cAAA,iCAMUL,WAAW,GAAGM,YAAd,CAA2B,aAA3B,EAA0CJ,QAA1C,EAAoDK,IAApD,CAAyD,UAACC,IAAD,EAAU;gBACrEC,OAAO,CAACC,GAAR,CAAYF,IAAZ;gBACAG,KAAK,CAAC,kBAAD,CAAL;cACH,CAHK,EAGHC,KAHG,CAGG,YAAM;gBACXD,KAAK,CAAC,uBAAD,CAAL;cACH,CALK,CANV;;YAAA;cAYI,KAAKN,eAAL,CAAqB,KAArB;;YAZJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;;8EARCR,U;;;;;WAAgC,K;;yEAChCA,U;;;;;WAA2B,E;;4EAC3BA,U;;;;;WAA8B,E;;0DAM9BC,M,iKAeAA,M;;;;;;;WAAyB,UAACe,MAAD,EAAqB;MAC3C,KAAI,CAACC,SAAL,GAAiBD,MAAjB;IACH,C;;;SA1BgBZ,U"},"metadata":{},"sourceType":"module"}