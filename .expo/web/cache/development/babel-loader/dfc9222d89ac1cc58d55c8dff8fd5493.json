{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { Box, Center, FormControl, Heading, Input, Button, VStack, HStack, Link, useToast } from 'native-base';\nimport RootStore from \"../../stores/RootStore\";\nimport { observer } from 'mobx-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function Register(props) {\n  var loginStore = RootStore.loginStore;\n  var toast = useToast();\n\n  var backToLogin = function backToLogin() {\n    props.navigation.goBack();\n  };\n\n  var onRegister = function onRegister() {\n    return _regeneratorRuntime.async(function onRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(loginStore.fullname == '' || loginStore.email == '' || loginStore.phone == '' || loginStore.password == '')) {\n              _context.next = 3;\n              break;\n            }\n\n            toast.show({\n              description: 'Please enter valid details'\n            });\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(loginStore.register());\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setRegisterData = function setRegisterData(val, type) {\n    if (type === 'fullname') {\n      loginStore.fullname = val;\n    } else if (type === 'email') {\n      loginStore.email = val;\n    } else if (type === 'phone') {\n      loginStore.phone = val;\n    } else {\n      loginStore.password = val;\n    }\n  };\n\n  return _jsx(Center, {\n    w: \"100%\",\n    bg: 'primary.500',\n    flex: 1,\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: \"4\",\n      py: \"8\",\n      w: \"90%\",\n      maxW: \"290\",\n      bg: 'white',\n      borderRadius: \"lg\",\n      children: [_jsxs(Box, {\n        alignItems: \"center\",\n        children: [_jsx(Heading, {\n          size: \"md\",\n          fontWeight: \"600\",\n          color: \"coolGray.800\",\n          _dark: {\n            color: \"warmGray.50\"\n          },\n          children: \"Sports Buddy\"\n        }), _jsx(Heading, {\n          mt: \"1\",\n          _dark: {\n            color: \"warmGray.200\"\n          },\n          color: \"coolGray.600\",\n          fontWeight: \"medium\",\n          size: \"sm\",\n          children: \"Registration\"\n        })]\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Full Name\"\n          }), _jsx(Input, {\n            value: loginStore == null ? void 0 : loginStore.fullname,\n            onChangeText: function onChangeText(val) {\n              return setRegisterData(val, 'fullname');\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email\"\n          }), _jsx(Input, {\n            value: loginStore == null ? void 0 : loginStore.email,\n            onChangeText: function onChangeText(val) {\n              return setRegisterData(val, 'email');\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Phone\"\n          }), _jsx(Input, {\n            value: loginStore == null ? void 0 : loginStore.phone,\n            onChangeText: function onChangeText(val) {\n              return setRegisterData(val, 'phone');\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            value: loginStore == null ? void 0 : loginStore.password,\n            onChangeText: function onChangeText(val) {\n              return setRegisterData(val, 'password');\n            }\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"indigo\",\n          onPress: onRegister,\n          children: \"Sign up\"\n        }), _jsx(HStack, {\n          mt: \"1\",\n          justifyContent: \"center\",\n          children: _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            onPress: backToLogin,\n            children: \"Back\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default observer(Register);","map":{"version":3,"names":["React","Box","Center","FormControl","Heading","Input","Button","VStack","HStack","Link","useToast","RootStore","observer","Register","props","loginStore","toast","backToLogin","navigation","goBack","onRegister","fullname","email","phone","password","show","description","register","setRegisterData","val","type","color","fontWeight","fontSize"],"sources":["/home/suraj/Desktop/hack/new/ineuron_sport_buddy_app/src/screens/login/Register.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Center, FormControl, Heading, Input, Button, VStack, HStack, Link, Toast, useToast } from 'native-base';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { AuthStackParams } from '../../navigation/AuthNavigator';\nimport RootStore from '../../stores/RootStore';\nimport { observer } from 'mobx-react';\n\ninterface IProps {\n    navigation: StackNavigationProp<AuthStackParams, 'Register'>\n}\n\nconst Register: React.FC<IProps> = (props) => {\n\n    const { loginStore } = RootStore;\n    const toast = useToast();\n\n    const backToLogin = () => {\n        props.navigation.goBack();\n    }\n\n    const onRegister = async () => {\n        if (loginStore.fullname == '' || loginStore.email == '' || loginStore.phone == '' || loginStore.password == '') {\n            toast.show({ description: 'Please enter valid details' });\n            return;\n        }\n        await loginStore.register();\n    }\n\n    const setRegisterData = (val: any, type: any) => {\n        if (type === 'fullname') {\n            loginStore.fullname = val;\n        } else if (type === 'email') {\n            loginStore.email = val;\n        } else if (type === 'phone') {\n            loginStore.phone = val;\n        } else {\n            loginStore.password = val;\n        }\n    }\n\n    return <Center w=\"100%\" bg={'primary.500'} flex={1}>\n        <Box safeArea p=\"4\" py=\"8\" w=\"90%\" maxW=\"290\" bg={'white'} borderRadius='lg'>\n            <Box alignItems='center'>\n                <Heading size='md' fontWeight=\"600\" color=\"coolGray.800\"\n                    _dark={{ color: \"warmGray.50\" }}>\n                    Sports Buddy\n                </Heading>\n                <Heading mt=\"1\" _dark={{\n                    color: \"warmGray.200\"\n                }} color=\"coolGray.600\" fontWeight=\"medium\" size='sm'>\n                    Registration\n                </Heading>\n            </Box>\n\n            <VStack space={3} mt=\"5\">\n                <FormControl>\n                    <FormControl.Label>Full Name</FormControl.Label>\n                    <Input value={loginStore?.fullname} onChangeText={(val) => setRegisterData(val, 'fullname')} />\n                </FormControl>\n                <FormControl>\n                    <FormControl.Label>Email</FormControl.Label>\n                    <Input value={loginStore?.email} onChangeText={(val) => setRegisterData(val, 'email')} />\n                </FormControl>\n                <FormControl>\n                    <FormControl.Label>Phone</FormControl.Label>\n                    <Input value={loginStore?.phone} onChangeText={(val) => setRegisterData(val, 'phone')} />\n                </FormControl>\n                <FormControl>\n                    <FormControl.Label>Password</FormControl.Label>\n                    <Input type=\"password\" value={loginStore?.password} onChangeText={(val) => setRegisterData(val, 'password')} />\n                </FormControl>\n                <Button mt=\"2\" colorScheme=\"indigo\" onPress={onRegister}>\n                    Sign up\n                </Button>\n\n                <HStack mt=\"1\" justifyContent=\"center\">\n                    <Link _text={{ color: \"indigo.500\", fontWeight: \"medium\", fontSize: \"sm\" }}\n                        onPress={backToLogin}>\n                        Back\n                    </Link>\n                </HStack>\n            </VStack>\n        </Box>\n    </Center>;\n};\n\nexport default observer(Register);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}