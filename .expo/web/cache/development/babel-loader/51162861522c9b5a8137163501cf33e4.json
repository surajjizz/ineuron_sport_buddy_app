{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar LocalStorage = function () {\n  function LocalStorage() {\n    _classCallCheck(this, LocalStorage);\n  }\n\n  _createClass(LocalStorage, null, [{\n    key: \"set\",\n    value: function set(key, value) {\n      var persist;\n      return _regeneratorRuntime.async(function set$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              persist = {\n                type: typeof value,\n                value: value\n              };\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, this.getRaw(persist)));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var json;\n      return _regeneratorRuntime.async(function get$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(LocalStorage.getItemJSON(key));\n\n            case 2:\n              json = _context2.sent;\n              return _context2.abrupt(\"return\", json ? json.value : null);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getItemJSON\",\n    value: function getItemJSON(key) {\n      var jsonObj;\n      return _regeneratorRuntime.async(function getItemJSON$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 2:\n              jsonObj = _context3.sent;\n              jsonObj = jsonObj ? jsonObj : \"{}\";\n              return _context3.abrupt(\"return\", JSON.parse(jsonObj));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getRaw\",\n    value: function getRaw(value) {\n      return JSON.stringify(value);\n    }\n  }, {\n    key: \"clearStorage\",\n    value: function clearStorage() {\n      return _regeneratorRuntime.async(function clearStorage$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return LocalStorage;\n}();\n\nexport { LocalStorage as default };","map":{"version":3,"names":["AsyncStorage","LocalStorage","key","value","persist","type","setItem","getRaw","getItemJSON","json","getItem","jsonObj","JSON","parse","stringify","clear"],"sources":["/home/suraj/Desktop/hack/new/ineuron_sport_buddy_app/src/storage/LocalStorage.ts"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ILSFormat } from \"../interfaces/ILocalStorage\";\n\nexport default class LocalStorage {\n\n    static async set(key: string, value: any) {\n        const persist: ILSFormat = {\n            type: typeof value,\n            value: value\n        };\n        await AsyncStorage.setItem(key, this.getRaw(persist));\n    }\n\n    static async get(key: string): Promise<any> {\n        const json = await LocalStorage.getItemJSON(key);\n        return json ? json.value : null;\n    }\n\n    static async getItemJSON(key: string): Promise<ILSFormat> {\n        let jsonObj = await AsyncStorage.getItem(key)\n        jsonObj = jsonObj ? jsonObj : \"{}\"\n        return JSON.parse(jsonObj);\n    }\n\n    static getRaw(value: ILSFormat) {\n        return JSON.stringify(value);\n    }\n\n    static async clearStorage() {\n        await AsyncStorage.clear();\n    }\n}\n"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;IAGqBC,Y;;;;;;;WAEjB,aAAiBC,GAAjB,EAA8BC,KAA9B;MAAA;MAAA;QAAA;UAAA;YAAA;cACUC,OADV,GAC+B;gBACvBC,IAAI,EAAE,OAAOF,KADU;gBAEvBA,KAAK,EAAEA;cAFgB,CAD/B;cAAA;cAAA,iCAKUH,YAAY,CAACM,OAAb,CAAqBJ,GAArB,EAA0B,KAAKK,MAAL,CAAYH,OAAZ,CAA1B,CALV;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAQA,aAAiBF,GAAjB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACuBD,YAAY,CAACO,WAAb,CAAyBN,GAAzB,CADvB;;YAAA;cACUO,IADV;cAAA,kCAEWA,IAAI,GAAGA,IAAI,CAACN,KAAR,GAAgB,IAF/B;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAKA,qBAAyBD,GAAzB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACwBF,YAAY,CAACU,OAAb,CAAqBR,GAArB,CADxB;;YAAA;cACQS,OADR;cAEIA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,IAA9B;cAFJ,kCAGWC,IAAI,CAACC,KAAL,CAAWF,OAAX,CAHX;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAMA,gBAAcR,KAAd,EAAgC;MAC5B,OAAOS,IAAI,CAACE,SAAL,CAAeX,KAAf,CAAP;IACH;;;WAED;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACUH,YAAY,CAACe,KAAb,EADV;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;;;;SAzBiBd,Y"},"metadata":{},"sourceType":"module"}