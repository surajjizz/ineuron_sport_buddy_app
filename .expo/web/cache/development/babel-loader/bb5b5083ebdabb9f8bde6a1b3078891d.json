{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { observable, action, makeObservable } from \"mobx\";\nvar CommonStore = (_class = function () {\n  function CommonStore() {\n    _classCallCheck(this, CommonStore);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"setLoaderStatus\", _descriptor2, this);\n\n    makeObservable(this);\n    this.init();\n  }\n\n  _createClass(CommonStore, [{\n    key: \"resetData\",\n    value: function resetData() {\n      this.isLoading = false;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return _regeneratorRuntime.async(function init$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CommonStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"resetData\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"resetData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"init\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"init\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"setLoaderStatus\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (status) {\n      console.log(\"status\", status);\n      _this.isLoading = status;\n    };\n  }\n})), _class);\nexport { CommonStore as default };","map":{"version":3,"names":["observable","action","makeObservable","CommonStore","init","isLoading","status","console","log"],"sources":["/home/mayandiraja/Projects/Hackathon/dummy/ineuron_sport_buddy_app/src/stores/CommonStore.ts"],"sourcesContent":["import { observable, action, makeObservable } from \"mobx\";\n\nexport default class CommonStore {\n    @observable isLoading: boolean = false;\n\n    constructor() {\n        makeObservable(this);\n        this.init()\n    }\n\n    @action resetData() {\n        this.isLoading = false;\n    }\n\n    @action async init() {\n        // this.country = await AppStorage.getCountry()\n    }\n\n    @action setLoaderStatus = (status: boolean) => {\n        console.log(\"status\",status)\n        this.isLoading = status\n    }\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,cAA7B,QAAmD,MAAnD;IAEqBC,W;EAGjB,uBAAc;IAAA;;IAAA;;IAAA;;IACVD,cAAc,CAAC,IAAD,CAAd;IACA,KAAKE,IAAL;EACH;;;;WAED,qBAAoB;MAChB,KAAKC,SAAL,GAAiB,KAAjB;IACH;;;WAED;MAAA;QAAA;UAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;;8EAXCL,U;;;;;WAAgC,K;;8DAOhCC,M,2IAIAA,M,gKAIAA,M;;;;;;;WAAyB,UAACK,MAAD,EAAqB;MAC3CC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,MAArB;MACA,KAAI,CAACD,SAAL,GAAiBC,MAAjB;IACH,C;;;SAnBgBH,W"},"metadata":{},"sourceType":"module"}